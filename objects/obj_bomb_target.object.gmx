<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>maxhp = 2500;
hp = maxhp;
displayhp = hp;
child = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var isAlly = false;
if (hp &lt;= 0) {
    instance_destroy();
}
if ((child = object_get_parent(obj_bomb_target)) != -1) {
    isAlly = child.isAlly;
}
if (keyboard_check_pressed(vk_space)) {hp -= 500;}
/* set selected squad to perform action on bombing targets */
for (var i = 0; i &lt; MAX_SQUADS; i++) {
    var s = global.squad[i];
    if (s != noone) {
        if (s.isAlly != isAlly) {
            if (s.selected) {
                if (s.combatRole != 0) { // check plane type if it's not fighters
                    if (mouse_check_button_pressed(mb_left)) {
                        var size = max(sprite_width,sprite_height);
                        if (inSquare(mouse_x,mouse_y,x-size,y-size,x+size,y+size)) {
                            ds_list_clear(s.coordinate_queue);
                            s.engageSquad = id;
                            s.escortSquad = id;
                        }
                        else {
                            s.engageSquad = undefined;
                            s.escortSquad = undefined;
                        }
                    }
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var xx = (x-view_xview[0])*windowRatio_x;
var yy = (y-view_yview[0])*windowRatio_y;
var color = green;
if (!child.isAlly) {
    color = red;
}
if (hp &lt; displayhp) {
    displayhp = var_wipe(displayhp,hp,100,0,maxhp*0.005);
}
var x1 = xx-100;
var x2 = xx-100;
var y1 = yy-sprite_height-10;
var y2 = yy-sprite_height;
var w = 2;
draw_rectangle_colour(x1-w,y1-w,x2+200+w,+y2+w,0,0,0,0,false);
draw_rectangle_colour(x1,y1,x2+((displayhp/maxhp)*200),y2,white,white,white,white,false);
draw_rectangle_colour(x1,y1,x2+((hp/maxhp)*200),y2,color,color,color,color,false);
draw_set_font(global.gameFont);
draw_set_valign(fa_bottom);
draw_set_halign(fa_center);
draw_text(xx,yy-sprite_height,string(hp)+"/"+string(maxhp));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
