<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>fireParticleInit();
global.mapView = false;

for (var i = 0; i &lt;= MAX_SQUADS; i++) {
    global.squad[i] = noone;
}
global.squadsInCommand = 6;
global.selectedSquad = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* set selected squad */
var key = keyboard_key;
if ((49 &lt;= key) &amp;&amp; (key &lt;= 57)) {
    if (keyboard_check_pressed(key)) {
        var v = 1 &lt;&lt; (key-49);
        if (keyboard_check(vk_shift)) {
            global.selectedSquad ^= v;
        }
        else {
            global.selectedSquad = turnary((v &gt;&gt; (key-49)) &amp; 1,v,0);
        }
    }
}
/* squad command */
if (global.selectedSquad &gt;= 0) {
    if (mouse_check_button_pressed(mb_left)) {
        for (var i = 0; i &lt; 9; i++) {
            if (getSquadSelected(i)) {
                if (global.squad[i] == noone) {
                    createSquad(mouse_x,mouse_y,i,10,obj_ally_plane,true,100001);
                }
            }
        }
    }
}
if (mouse_check_button_pressed(mb_right)) {
    createSquad(mouse_x,mouse_y,instance_number(obj_squad),10,obj_enemy_plane,false,100002,true);
}
/* view scaling */
var prev_w = view_wview[0];
var prev_h = view_hview[0];
if (mouse_wheel_up()) {
    view_wview[0] -= maxView*0.05;
    view_hview[0] -= maxView*0.05;
}
if (mouse_wheel_down()) {
    view_wview[0] += maxView*0.05;
    view_hview[0] += maxView*0.05;
}
view_wview[0] = clamp(view_wview[0],minView,maxView);
view_hview[0] = clamp(view_hview[0],minView,maxView);
view_xview[0] += (prev_w-view_wview[0])/2;
view_yview[0] += (prev_h-view_hview[0])/2;
if (keyboard_check(ord("A"))) {view_xview[0] -= 5;}
if (keyboard_check(ord("D"))) {view_xview[0] += 5;}
if (keyboard_check(ord("W"))) {view_yview[0] -= 5;}
if (keyboard_check(ord("S"))) {view_yview[0] += 5;}
if (keyboard_check_pressed(vk_space)) {
    view_wview[0] = 960;
    view_hview[0] = 960;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var wv = view_wport[0];
var hv = view_hport[0];

draw_set_valign(fa_top);
draw_set_halign(fa_left);
draw_text(0,0,string(mouse_x)+","+string(mouse_y));
for (var i = 0; i &lt; 9; i++) {
    draw_text(8*i,16,getSquadSelected(i));
}

for (var i = 0; i &lt; global.squadsInCommand; i++) {
    var s = global.squad[i];
    var align = global.squadsInCommand mod 2;
    var spacing = 6;
    var w = 40+spacing;
    var h = 40+spacing;
    var xx = (wv/2)+(w*i)+((align+1)*(w/2))-(align*(w/2))-((global.squadsInCommand*w)/2);
    var yy = (hv-(h/2));
    var selected = 0;
    if (getSquadSelected(i)) {
        selected = 1;
    }
    draw_sprite_ext(spr_squad_outline_gui,selected,xx,yy,1,1,0,green,1);
    if (s != noone) {
        draw_sprite(spr_ammo,0,xx-((w-spacing)/2),yy-3-(h/2));
        draw_sprite_part_ext(spr_ammo,1,0,0,(ceil(s.ammo/round(s.maxAmmo/8)))*5,6,xx-((w-spacing)/2),yy-3-(h/2),1,1,green,1);
        draw_set_valign(fa_bottom);
        draw_set_halign(fa_center);
        
        draw_set_colour(green);
        draw_text(xx,yy-6-(h/2),string(s.membersAlive)+"/"+string(s.squadSize));
        draw_set_colour(white);
        
        if (s != noone) {
            if (s.planesTakingOff) {
                draw_sprite_ext(spr_take_off,s.image_index,xx,yy,2,2,0,green,1);
            }
            else if (s.planesLanding) {
                draw_sprite_ext(spr_landing,s.image_index,xx,yy,2,2,0,green,1);
            }
            else if (s.isEngaged) {
                draw_sprite_ext(spr_engaging,s.image_index,xx,yy,2,2,0,green,1);
            }
            draw_sprite_ext(spr_squad_number,s.squadNumber,xx,yy,2,2,0,green,1);
        }
    }
}
//draw_line(wv/2,0,wv/2,hv);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
