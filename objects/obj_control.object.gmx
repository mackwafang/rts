<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>fireParticleInit();
global.mapView = false;

global.squadType[0] = 1;
global.squadType[1] = 1;
global.squadType[2] = 1;
global.squadType[3] = 3;
global.squadType[4] = 3;
global.squadType[5] = 3;
global.squadType[6] = 2;
global.squadType[7] = 2;
global.squadType[8] = 2;
global.FF_size = 4;
global.TB_size = 12;
global.DB_size = 12;
for (var i = 0; i &lt; MAX_SQUADS; i++) {
    global.squad[i] = noone;
    var time = 0;
    var size = 0;
    switch(global.squadType[i]) {
        case 1:
            time = FR_ARMING_TIME;
            size = global.FF_size;
            break;
        case 2:
            time = DB_ARMING_TIME;
            size = global.DB_size;
            break;
        case 3:
            time = TB_ARMING_TIME;
            size = global.TB_size;
            break;
    }
    global.squadInitDelayTime[i] = 30*(time*size)*0;
    global.squadDelayTime[i] = global.squadInitDelayTime[i];
}
global.squadsInCommand = MAX_SQUADS;
global.selectedSquad = 0;
global.mouseOnObject = noone;

cooldownFont = font_add_sprite_ext(spr_cooldown_font,"0123456789.:",false,-7);
global.gameFont = font_add_sprite(spr_squad_font,ord("!"),true,1);
squadFont = font_add_sprite(spr_squad_font,ord("!"),true,1);
display_set_gui_size(view_wport[0],view_hport[0]);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* set selected squad */
var key = keyboard_key;
if ((49 &lt;= key) &amp;&amp; (key &lt;= 57)) {
    if (keyboard_check_pressed(key)) {
        var v = 1 &lt;&lt; (key-49);
        if (keyboard_check(vk_shift)) {
            global.selectedSquad ^= v;
        }
        else {
            global.selectedSquad = v;//turnary(isSquadSelected(key-49),0,v);
        }
    }
}
/* squad delay timer */
for (var i = 0; i &lt; MAX_SQUADS; i++) {
    if (global.squadDelayTime[i] &gt; -149) {
        global.squadDelayTime[i] -= 1;
    }
    else {
        global.squadDelayTime[i] = -30;
    }
}
/* squad command */
if (global.selectedSquad &gt;= 0) {
    if (mouse_check_button_pressed(mb_left)) {
        for (var i = 0; i &lt; MAX_SQUADS; i++) {
            if (isSquadSelected(i)) {
                if (global.squad[i] == noone) {
                    var size = 0;
                    switch(global.squadType[i]) {
                        case 1:
                            size = global.FF_size;
                            break;
                        case 2:
                            size = global.DB_size;
                            break;
                        case 3:
                            size = global.TB_size;
                    }
                    createSquad(mouse_x,mouse_y,i,size,global.squadType[i],true,100001);
                }
            }
        }
    }
}
if (mouse_check_button_pressed(mb_right)) {
    createSquad(mouse_x,mouse_y,instance_number(obj_squad),6,obj_enemy_plane,false,100002,true);
}
/* view scaling */
var prev_w = view_wview[0];
var prev_h = view_hview[0];
if (mouse_wheel_up()) {
    view_wview[0] -= 60;
    view_hview[0] -= 40;
}
if (mouse_wheel_down()) {
    view_wview[0] += 60;
    view_hview[0] += 40;
}
view_wview[0] = clamp(view_wview[0],minView,maxView);
view_hview[0] = clamp(view_hview[0],minView*(2/3),maxView*(2/3));
view_xview[0] += (prev_w-view_wview[0])/2;
view_yview[0] += (prev_h-view_hview[0])/2;
if (keyboard_check(ord("A"))) {view_xview[0] -= 5;}
if (keyboard_check(ord("D"))) {view_xview[0] += 5;}
if (keyboard_check(ord("W"))) {view_yview[0] -= 5;}
if (keyboard_check(ord("S"))) {view_yview[0] += 5;}
if (keyboard_check_pressed(vk_space)) {
    view_wview[0] = 960;
    view_hview[0] = 960;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>font_delete(cooldownFont);
font_delete(squadFont);
font_delete(global.gameFont);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var wv = view_wport[0];
var hv = view_hport[0];

draw_set_valign(fa_top);
draw_set_halign(fa_left);
draw_text(0,0,string(mouse_x)+","+string(mouse_y));
if (instance_exists(global.squad[0])) {
    for (var i = 0; i &lt; global.squad[0].squadSize; i++) {
        if (global.squad[0].squadMember[| i] != undefined) {
            draw_text(0,16+(i*16),string(global.squad[0].squadMember[| i])+": "+string(global.squad[0].squadMember[| i].planeId));
            draw_rectangle_colour(64,(i+1)*16,64+global.squad[0].squadMember[| i].maxhp,(i+2)*16,0,0,0,0,false);
            draw_rectangle_colour(64,(i+1)*16,64+global.squad[0].squadMember[| i].hp,(i+2)*16,green,green,green,green,false);
        }
    }
}
for (var i = 0; i &lt; global.squadsInCommand; i++) {
    var s = global.squad[i];
    var align = global.squadsInCommand mod 2;
    var spacing = 6;
    var w = 40+spacing;
    var h = 40+spacing;
    var xx = (wv/2)+(w*i)+((align+1)*(w/2))-(align*(w/2))-((global.squadsInCommand*w)/2);
    var yy = (hv-(h/2));
    var selected = 0;
    if (isSquadSelected(i)) {
        selected = 1;
        yy -= 8+spacing;
    }
    draw_sprite_ext(spr_squad_number,i,xx,hv-8,1,1,0,green,1);
    if (global.squadDelayTime[i] &gt; 0) {
        draw_set_valign(fa_middle);
        draw_set_halign(fa_center);
        draw_set_font(cooldownFont);
        if ((global.squadDelayTime[i] div 3600) == 0) {
            var v = string(global.squadDelayTime[i] div 60);
            if (global.squadDelayTime[i] &lt;= 600) {
                v = string_format(global.squadDelayTime[i]/60,1,1);
            }
        }
        else {
            v = string(global.squadDelayTime[i] div 3600)+":"+leadingZero(2,(global.squadDelayTime[i] div 60) mod 60);
        }
        rectangleCooldown(xx-(w-spacing)/2,yy-(h-spacing)/2,xx+(w-spacing)/2,yy+(h-spacing)/2,global.squadDelayTime[i],global.squadInitDelayTime[i],0,0.5);
        draw_text(xx-4,yy,v);
    }
    else {
        if (s != noone) {
            draw_sprite(spr_ammo,(2*s.combatRole),xx-((w-spacing)/2),yy-7-(h/2));
            draw_sprite_part_ext(spr_ammo,(2*s.combatRole)+1,0,0,(ceil(s.ammo/round(s.maxAmmo/8)))*5,10,xx-((w-spacing)/2),yy-7-(h/2),1,1,green,1);
            draw_set_valign(fa_bottom);
            draw_set_halign(fa_center);
            draw_set_font(squadFont);
            draw_set_colour(green);
            draw_text(xx,yy-12-(h/2),string(s.membersAlive)+"/"+string(s.squadSize));
            draw_set_colour(white);            

            if (s.statusImage != -1) {draw_sprite_ext(s.statusImage,s.subImage,xx,yy,2,2,0,green,1);}
            draw_sprite(spr_squad_hp_bar,0,xx-((w-spacing)/2),yy-12-(h/2));
            draw_sprite_part_ext(spr_squad_hp_bar,1,0,0,(s.hp/s.maxhp)*40,5,xx-((w-spacing)/2),yy-12-(h/2),1,1,green,1);
        }
        else {
            draw_sprite(spr_squad_ready,abs(global.squadDelayTime[i]),xx,yy-(h/2));
        }
    }
    draw_sprite_ext(spr_squad_outline_gui,selected,xx,yy,1,1,0,green,1);
}
//draw_line(wv/2,0,wv/2,hv);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
